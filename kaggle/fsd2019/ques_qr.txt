首先，想交流一下，我对FSD的理解，然后提出一些问题，关于data，metrics，model，coding上的。

我认为目前的技术大多是用图像识别的方法来处理音频，也就是说不是从音频的角度来分析。librosa能提取的特征很多，除了频谱外，其余大多都是2D矩阵形式，也有1Darray的。困难在于怎么运用这些特征，比方说怎么从一个matrix中算出一个或多个特征，我绞尽脑汁觉得很折腾，如果用的好，我认为一个很简单的模型就能识别出state of the art的准确率了。您觉得呢？而且，从音频的分析片段截取，我认为也不必像图像一样，因为音频是以秒为单位的，人能1秒内就分析是什么声音，音频应该可以从这个角度上，截取很段的一段进行分析，不一定需要3秒 5秒 甚至10秒，或许可以把每个音频分成若干个，分析，取平均？说到这点，我认为您的global feature是亮点也是关键，取了128段，每段都拿出了一些特征，我猜想恰是这些特征让网络”get“到了频率等等音频的特征，成功的得出结果？ 不过我觉得在global feature提取之前，应该也是可以用librosa trim一下剪掉前后的空白声音部分。补充一下，我认为可以把librosa的很多其他特征，加到这些global feature上面，虽然是矩阵和向量，用std max min这些最简单的， 没准会提升很多准确率？您试过这个吗？

除了上面没有序号的问题和想法，下面是带序号的：
1a 数据分为curated，noisy，test，听起来test和curated比较像，因此如果有一个比较好的算法，noisy这类嘈杂的声音是否可以不直接用，，但大多获奖的都用了noisy，是否是因为神经网络庞大本身的原因。
1b 数据方面，第二个问题。有很多音频文件是多标签的，我统计了一下，有2个标签，3个标签，3、4、甚至5 6 个 都有 最多（6-7） 那么这些多标签的数据怎么处理呢？我本来有个可能是不成熟的想法，就是把每个文件复制到每一个标签的文件夹下面，这样一共有80个文件夹（左右），但是有多标签的怎么处理？？会被复制到多个文件夹下。按照这种办法，也只能分1个类，无法分多类。

说一下github fsd的readme
2 global pooling 的pixelshuffle 这个函数能简单解释一下吗？ + max pooling in time axes + ave pooling in mel axis这些在哪里体现？se block在model里有看到是squeeze and excite 请问这个网络的来源资源有吗？怎么想到的？为什么？l1 conv又是？是regularization 的 1 类吗 l1 l2 这些？ label smoothing是？（不好意思这些概念应该比较基本但是我都没用过或者现在还没有理解）
3 mixup 就是FreeSound这个class里面定义的吗，generator每次生成一个batch的音频就会修改里面的数据，叫做mixup混合，音频增强augment？还有个问题，batch_y(-lm-lm+1) + lm 这个是我自己根据代码推算出来的，lm是0.0几，一个很小的数字，那么这里意思是吧0变成0.0几，把1变成0.99 类似这样吗？什么原因？
0
5

4 3TTA的3的意思？test time augmentation 在哪个文件有代码？我好像没找到。
5 stacker 在 ensemble文件里。LocallyConnected1D怎么理解？其实我很多keras的层，类似这样的都不太理解。要怎么去理解呢？ 更别说下面这个： 1.6 和 0.5 完全不知道哪里来的？x = Lambda(lambda x: (x-1.6))(x) 还有一个 （x+1 ）*0.5 实在不理解为什么。

说完了readme，下面是具体代码问题。

6 关于模型model.py里定义的十几个def model 和 conv block 之类的，这些有没有一些总结呢？我看起来比较吃力，如果有一些注释什么的可能会更好。可能一方面也是我经验不够。能否简单介绍一下呢？或许顺便可以放进github里的Q&A环节哈哈。se max3exam v1mix 这些都是些什么？抱歉！我真的不懂。您应该能解释的清楚！

7 metrics 方面。您用的是skleran的  label_ranking_average_precision 这样的。在kernel上面和第一名的代码使用的是google colab上的lwlrap，好长啊！我看的头晕。整整可以打印2面的A4纸。所以我是想问一下到底用sklearn可以不，为什么还需要google上面的？我的理解是sklearn的版本是简化版本的？那么lwlrap到底和sklearn有上面不一样？我试过sklearn的这个，就是按照预测的排名。0的话不考虑分数。取平均值。直接用这个就完美了啊？
8 
